library('swirl')
install.packages('swirl')
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
rgp1()
rgpw()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., data = swiss)
vif(mdl)
md2 <- lm(Fertility ~ . - Examination, data = swiss)
mdl2 <- lm(Fertility ~ . - Examination, data = swiss)
vif(mdl2)
simbias()
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, data = swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n ,- (deviance(fit1) - deviance(fit3))/2
n <- (deviance(fit1) - deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail = FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
library(swirl)
swirl()
ravenData
mdl1 <- glm(ravenWinNum ~ ravenScore, family = binomial, data = ravenData)
md1 <- glm(ravenWinNum ~ ravenScore, family = binomial, data = ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, family = binomial, data = ravenData)
lodds <- predict(mdl, data.frame(ravenScore = c(0, 3, 6)))
exp(lodds)/(1 + exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
nxt()
head(hits)
class(hits[, 'date'])
as.integer(head(hits[, 'date']))
mdl <- gml (visits ~ date, poisson, hits)
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp(confint(mdl, 'date'))
which.max(hits[, 'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(0.95, lambda = )
qpois(0.95, lambda)
mdl2 <- glm(visits ~ date, offset = log(visits + 1), data = simplystatas)
mdl2 <- glm(visits ~ date, offset = log(visits + 1), data = simplystats)
mdl2 <- glm(visits ~ date, offset = log(visits + 1), data = hits)
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits, offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
plot(cars)
plot(cars)
plot(cars)
install.packages('caret')
library(caret)
library(kernlab)
library(caret)
library(kernlab)
data(spam)
intrain <- createDataPartition(y = spam$type,
p = 0.75,
list = FALSE)
train <- spam[intrain,]
test <- spam[-intrain,]
intrain <- createDataPartition(y = spam$type,
p = 0.75,
list = TRUE)
test <- spam[-intrain,]
modelFit <- train(type ~ . ,data = training, method = 'glm' )
modelFit <- train(type ~ . ,data = train, method = 'glm' )
install.packages(e1071)
install.packages('e1071')
modelFit <- train(type ~ . ,data = train, method = 'glm' )
warnings()
modelFit
#predictions
predictions <- predict(modelFit, newdata=test)
confusionMatrix(predictions, test$type)
library(caret)
library(kernlab)
data(spam)
#splitting the data
intrain <- createDataPartition(y = spam$type,
p = 0.75,
list = FALSE)
train <- spam[intrain,]
test <- spam[-intrain,]
set.seed(123)
#folding
folds = createFolds(y = spam$type,
k=10, list = TRUE,
returnTrain = TRUE)
plot(cars)
install.packages("devtools")
devtools::install_github("IRkernel/IRkernel")
IRkernel::installspec()
install.packages('digest')
install.packages("digest")
library(caret)
library(kernlab)
data(spam)
#splitting the data
intrain <- createDataPartition(y = spam$type,
p = 0.75,
list = FALSE)
train <- spam[intrain,]
test <- spam[-intrain,]
#training
hist(train$capitalAve, main = "", xlab  ='ave cap run length')
hist(train$capitalAve, main = "", xlab  ='ave cap run length')
trainCapAve <- train$capitalAve
trainCapAveS <- (trainCapAve - mean(trainCapAve))/sd(trainCapAve)
mean(trainCapAveS)
install.packages("devtools")
devtools::install_github("IRkernel/IRkernel")
install.packages("digest")
install.packages("digest")
devtools::install_github("IRkernel/IRkernel")
IRkernel::installspec()
plot(cars)
plot(cars)
library(readxl)
setwd('C:\\Users\\Hariharan\\Documents\\replications\\mrw1992')
getwd()
data <- read_excel('data/pwt90.xlsx', sheet = "Data")
data <- data[order(data$countrycode, data$year), ]
data['rgdpew'] <- data[, data['rgdpe']]/ data[, data['']]
library(readxl)
setwd('C:\\Users\\Hariharan\\Documents\\replications\\mrw1992')
getwd()
data <- read_excel('data/pwt90.xlsx', sheet = "Data")
data <- data[order(data$countrycode, data$year), ]
data['rgdpew'] <- data[, data['rgdpe']]/ data[, data['pop']]
library(readxl)
setwd('C:\\Users\\Hariharan\\Documents\\replications\\mrw1992')
getwd()
data <- read_excel('data/pwt90.xlsx', sheet = "Data")
data <- data[order(data$countrycode, data$year), ]
data['rgdpew'] <- data[,'rgdpe']/ data[, 'pop']
head(data$rgdpew)
tail(data$rgdpew)
library(dplyr)
?group_by
data['popgrowth'] <- data %>% group_by(countrycode) %>%
diff('pop')
data['popgrowth'] <- data %>% group_by(countrycode) %>% diff(pop, lag = 1, differences = 1)
#
data_group <- data %>% group_by(countrycode)
data['popgrowth'] <- diff(data_group[,'pop'], lag = 1, differences = 1)
View(data)
head(data$popgrowth)
data['popgrowth'] <- diff(data_group[,'pop'], lag = 1, differences = 1)
data$popgrowth <- diff(data_group[,'pop'], lag = 1, differences = 1)
data_group <- diff(data_group[,'pop'], lag = 1, differences = 1)
head(data_group$popgrowth)
head(data$popgrowth)
diff(data_group[,'pop'], lag = 1, differences = 1)
data[, 'popgrowth'] <- diff(group_by(data, countrycode)$pop, lag = 1, differences = 1)
